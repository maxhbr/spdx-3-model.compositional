* An implementation of spdx-3-model

This repository implements the datamodel defined in [[https://github.com/spdx/spdx-3-model][spdx-3-model]].

** Just a POC
This is just a proof of concept and probably roughtly 80% complete, but it has the following features
- *a datamodel*, using GADTs
  - implementing "core" and "software" profile
- *complete serialization* to JSON
  - example outputs are written to =./_testOut/=
- *complete deserialization* from JSON
- *conversion* from SPDX 2.2 or 2.3 to 3.0
  - this uses [[https://github.com/maxhbr/spdx-tools-hs/][spdx-tools-hs]]

** Some comments on the Serialization to JSON

*** Lets look at a =Package=:
#+BEGIN_EXAMPLE 
        { 
            "@type": "Package",
            "SPDXID": "urn:spdx:curl-7.50.3-1",
            "comment": null,
            "contentIdentifier": null,
            "creationInfo": {
                "created": "2022-11-13T13:14:36.324980945Z",
                "createdBy": [
                    {
                        "actorType": "PERSON",
                        "name": "Some Actor"
                    },
                    {
                        "actorType": "TOOL",
                        "name": "This Tool"
                    }
                ],
                "dataLicense": "CC0-1.0",
                "profile": [
                    {
                        "name": "core"
                    },
                    {
                        "name": "software"
                    },
                    {
                        "name": "licensing"
                    }
                ],
                "specVer": "3.0.0"
            },
            "description": null,
            "downloadLocation": null,
            "externalIdentifiers": [],
            "externalReferences": [],
            "homePage": null,
            "name": "curl-7.50.3-1",
            "originatedBy": [],
            "packagePurpose": [],
            "packageUrl": "pkg:deb/debian/curl@7.50.3-1?arch=i386&distro=jessie",
            "summary": null,
            "verifiedUsing": []
        }
#+END_EXAMPLE
This contanis all properties of =Package=, =Artifact= and =Element=, pulled to one flat JSON object.
For parsing, the type is specified in ="@type"=, and here all fields are filled with dummy data or their default values.
The =null= and =[]= entries are optional.

dropping all optional fields would result in:

#+BEGIN_EXAMPLE 
        { 
            "@type": "Package",
            "SPDXID": "urn:spdx:curl-7.50.3-1",
            "creationInfo": {
                "created": "2022-11-13T13:14:36.324980945Z",
                "createdBy": [
                    {
                        "actorType": "PERSON",
                        "name": "Some Actor"
                    },
                    {
                        "actorType": "TOOL",
                        "name": "This Tool"
                    }
                ],
                "dataLicense": "CC0-1.0",
                "profile": [
                    {
                        "name": "core"
                    },
                    {
                        "name": "software"
                    },
                    {
                        "name": "licensing"
                    }
                ],
                "specVer": "3.0.0"
            },
            "name": "curl-7.50.3-1",
            "packageUrl": "pkg:deb/debian/curl@7.50.3-1?arch=i386&distro=jessie"
        }
#+END_EXAMPLE